{
    "openapi": "3.0.0",
    "info": {
        "title": "BoardCamp API",
        "version": "1.0.0",
        "description": "API de gerenciamento de uma locadora de jogos de tabuleiro.",
        "contact": {
            "name": "Gabriela Tiago",
            "email": "gabrielatiagodearaujo@outlook.com"
        }
    },
    "servers": [
        {
            "url": "http://localhost:4000",
            "description": "API de Testes"
        }
    ],
    "paths": {
        "/categories": {
            "get": {
                "summary": "Lista de todas as categorias",
                "tags": [
                    "Categories"
                ],
                "description": "Retorna uma lista de todas as categorias disponíveis.",
                "responses": {
                    "200": {
                        "description": "Lista de categorias retornada com sucesso.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Nenhuma categoria encontrada."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            },
            "post": {
                "summary": "Cria nova categoria",
                "tags": [
                    "Categories"
                ],
                "description": "Cria uma nova categoria de jogo no catálogo.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Estratégia"
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Categoria criada com sucesso."
                    },
                    "409": {
                        "description": "Categoria já existe."
                    },
                    "422": {
                        "description": "Erro de validação: body não enviado, parâmetro 'name' ausente, 'name' não é uma string, ou 'name' é uma string vazia."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            }
        },
        "/categories/{id}": {
            "put": {
                "summary": "Atualiza categoria",
                "tags": [
                    "Categories"
                ],
                "description": "Atualiza uma categoria de jogo existente.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID da categoria a ser atualizada."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Estratégia"
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Categoria atualizada com sucesso."
                    },
                    "404": {
                        "description": "Categoria não encontrada."
                    },
                    "409": {
                        "description": "Categoria já existe com o novo nome."
                    },
                    "422": {
                        "description": "Erro de validação: body não enviado, parâmetro 'name' ausente, 'name' não é uma string, ou 'name' é uma string vazia."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            },
            "delete": {
                "summary": "Deleta categoria",
                "tags": [
                    "Categories"
                ],
                "description": "Deleta uma categoria existente.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID da categoria a ser deletada."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categoria deletada com sucesso."
                    },
                    "404": {
                        "description": "Categoria não encontrada."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            }
        },
        "/games": {
            "get": {
                "summary": "Lista de todos os jogos",
                "tags": [
                    "Games"
                ],
                "description": "Retorna uma lista de todos os jogos disponíveis no catálogo. Permite filtrar pelo nome do jogo usando o parâmetro de consulta 'name'.",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filtra os jogos pelo nome.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de jogos retornada com sucesso.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Game"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Nenhum jogo encontrado."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            },
            "post": {
                "summary": "Cria novo jogo",
                "tags": [
                    "Games"
                ],
                "description": "Adiciona um novo jogo no catálogo.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Banco Imobiliário"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "http://..."
                                    },
                                    "stockTotal": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "pricePerDay": {
                                        "type": "number",
                                        "example": 1500
                                    },
                                    "categoryId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "required": [
                                    "name",
                                    "image",
                                    "stockTotal",
                                    "pricePerDay",
                                    "categoryId"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Jogo criado com sucesso."
                    },
                    "409": {
                        "description": "Jogo já existe."
                    },
                    "422": {
                        "description": "Erro de validação: body não enviado, parâmetros ausentes ou inválidos."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            }
        },
        "/games/{id}": {
            "put": {
                "summary": "Atualiza jogo",
                "tags": [
                    "Games"
                ],
                "description": "Atualiza um jogo existente no catálogo.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID do jogo a ser atualizado."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Monópoly"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "http://..."
                                    },
                                    "stockTotal": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "pricePerDay": {
                                        "type": "number",
                                        "example": 1500
                                    },
                                    "categoryId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "required": [
                                    "name",
                                    "image",
                                    "stockTotal",
                                    "pricePerDay",
                                    "categoryId"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Jogo atualizado com sucesso."
                    },
                    "404": {
                        "description": "Jogo não encontrado."
                    },
                    "409": {
                        "description": "Jogo já existe com o novo nome."
                    },
                    "422": {
                        "description": "Erro de validação: body não enviado, parâmetros ausentes ou inválidos."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            },
            "delete": {
                "summary": "Deleta jogo",
                "tags": [
                    "Games"
                ],
                "description": "Remove um jogo do catálogo.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID do jogo a ser deletado."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Jogo deletado com sucesso."
                    },
                    "404": {
                        "description": "Jogo não encontrado."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            }
        },
        "/customers": {
            "get": {
                "summary": "Lista de todos os clientes",
                "tags": [
                    "Customers"
                ],
                "description": "Retorna uma lista de todos os clientes cadastrados. Permite filtrar pelo CPF usando o parâmetro de consulta 'cpf'.",
                "parameters": [
                    {
                        "name": "cpf",
                        "in": "query",
                        "description": "Filtra os clientes pelo CPF.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de clientes retornada com sucesso.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Customer"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Nenhum cliente encontrado."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            },
            "post": {
                "summary": "Cria novo cliente",
                "tags": [
                    "Customers"
                ],
                "description": "Adiciona um novo cliente ao sistema.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "João da Silva"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "11912345678"
                                    },
                                    "cpf": {
                                        "type": "string",
                                        "example": "12345678900"
                                    },
                                    "birthday": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    }
                                },
                                "required": [
                                    "name",
                                    "phone",
                                    "cpf",
                                    "birthday"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Cliente criado com sucesso."
                    },
                    "409": {
                        "description": "Cliente já existe."
                    },
                    "422": {
                        "description": "Erro de validação: body não enviado, parâmetros ausentes ou inválidos."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            }
        },
        "/customers/{id}": {
            "get": {
                "summary": "Busca cliente por ID",
                "tags": [
                    "Customers"
                ],
                "description": "Retorna os detalhes de um cliente específico pelo ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID do cliente a ser buscado."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cliente encontrado com sucesso.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Customer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cliente não encontrado."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            },
            "put": {
                "summary": "Atualiza cliente",
                "tags": [
                    "Customers"
                ],
                "description": "Atualiza os dados de um cliente existente.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID do cliente a ser atualizado."
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "João da Silva"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "11912345678"
                                    },
                                    "cpf": {
                                        "type": "string",
                                        "example": "12345678900"
                                    },
                                    "birthday": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    }
                                },
                                "required": [
                                    "name",
                                    "phone",
                                    "cpf",
                                    "birthday"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cliente atualizado com sucesso."
                    },
                    "404": {
                        "description": "Cliente não encontrado."
                    },
                    "409": {
                        "description": "Cliente já existe com os novos dados."
                    },
                    "422": {
                        "description": "Erro de validação: body não enviado, parâmetros ausentes ou inválidos."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            },
            "delete": {
                "summary": "Deleta cliente",
                "tags": [
                    "Customers"
                ],
                "description": "Remove um cliente do sistema.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID do cliente a ser deletado."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cliente deletado com sucesso."
                    },
                    "404": {
                        "description": "Cliente não encontrado."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            }
        },
        "/rentals": {
            "get": {
                "summary": "Lista de todos os aluguéis",
                "tags": [
                    "Rentals"
                ],
                "description": "Retorna uma lista de todos os aluguéis registrados. Permite filtrar por cliente usando o parâmetro de consulta 'customerId' e por jogo usando o parâmetro de consulta 'gameId'.",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "query",
                        "description": "Filtra os aluguéis pelo ID do cliente.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "gameId",
                        "in": "query",
                        "description": "Filtra os aluguéis pelo ID do jogo.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de aluguéis retornada com sucesso.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Rental"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Nenhum aluguel encontrado."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            },
            "post": {
                "summary": "Cria novo aluguel",
                "tags": [
                    "Rentals"
                ],
                "description": "Registra um novo aluguel de jogo por um cliente.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "gameId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "customerId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "daysRented": {
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "required": [
                                    "gameId",
                                    "customerId",
                                    "daysRented"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Aluguel criado com sucesso."
                    },
                    "400": {
                        "description": "Jogo não disponível para aluguel (estoque insuficiente)."
                    },
                    "404": {
                        "description": "Cliente ou jogo não encontrado."
                    },
                    "422": {
                        "description": "Erro de validação: body não enviado, parâmetros ausentes ou inválidos."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            }
        },
        "/rentals/{id}/return": {
            "post": {
                "summary": "Finaliza aluguel",
                "tags": [
                    "Rentals"
                ],
                "description": "Finaliza um aluguel existente, calculando o valor total e a taxa de atraso, se houver.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID do aluguel a ser finalizado."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Aluguel finalizado com sucesso."
                    },
                    "400": {
                        "description": "Aluguel já finalizado"
                    },
                    "404": {
                        "description": "Aluguel não encontrado."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            }
        },
        "/rentals/{id}": {
            "delete": {
                "summary": "Deleta aluguel",
                "tags": [
                    "Rentals"
                ],
                "description": "Remove um aluguel existente do sistema.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "ID do aluguel a ser deletado."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Aluguel deletado com sucesso."
                    },
                    "404": {
                        "description": "Aluguel não encontrado."
                    },
                    "500": {
                        "description": "Erro interno do servidor."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Category": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Estratégia"
                    }
                }
            },
            "Game": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Banco Imobiliário"
                    },
                    "image": {
                        "type": "string",
                        "example": "http://..."
                    },
                    "stockTotal": {
                        "type": "integer",
                        "example": 3
                    },
                    "pricePerDay": {
                        "type": "number",
                        "example": 1500
                    },
                    "categoryId": {
                        "type": "integer",
                        "example": 1
                    },
                    "categoryName": {
                        "type": "string",
                        "example": "Estratégia"
                    }
                }
            },
            "Customer": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "João da Silva"
                    },
                    "phone": {
                        "type": "string",
                        "example": "11912345678"
                    },
                    "cpf": {
                        "type": "string",
                        "example": "12345678900"
                    },
                    "birthday": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-01"
                    }
                }
            },
            "Rental": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "gameId": {
                        "type": "integer",
                        "example": 1
                    },
                    "customerId": {
                        "type": "integer",
                        "example": 1
                    },
                    "daysRented": {
                        "type": "integer",
                        "example": 3
                    },
                    "rentDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T10:00:00Z"
                    },
                    "returnDate": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "example": null
                    },
                    "originalPrice": {
                        "type": "number",
                        "example": 4500
                    },
                    "delayFee": {
                        "type": [
                            "number",
                            null
                        ],
                        "example": null
                    },
                    "customer": {
                        "$ref": "#/components/schemas/Customer"
                    },
                    "game": {
                        "$ref": "#/components/schemas/Game"
                    }
                }
            }
        }
    }
}